一.CSS
    1.左侧固定，右侧自适应
        使用grid布局或者flex布局
        1)grid
        2)flex
            为父元素设置display: flex;
            然后为右边自适应的子元素设置flex-grow: 1;
    2.css specifity（权重）
        类型                        权重
        ！important                 无穷
        行间样式                    1000
        id                          100
        class/属性选择器/伪类        10
        标签选择器/伪元素选择器       1
        通配符                       0
    3.css +/~
        +号选择器选择紧邻的兄弟元素
        ~号选择器选择随后的所有兄弟元素
    4.表格单双行样式更改
        可以利用 :nth-child(n)伪类来实现
        :nth-child(2n)选择偶数
        :nth-child(2n+1)选择奇数
    5.图片长宽成比例
        1)利用padding百分比来实现
            padding是通过获取元素的宽度来赋值的
            比如我设width: 20px; padding-bottom: 50%;
            会生成一个长为20px 宽为10px的长方形
        2)利用aspect-ratio(新出的属性)
    6.伪类和伪元素的区别

    7.图片懒加载
        1)监视图片位置
            window.onscroll=function(){//监视滚动事件，同时触发function
                domRect = qwe.getBoundingClientRect();//监视element的(x,y,width,height,top,left等)
                console.log(domRect);
            }
        2)实现图片加载


vue生命周期：
    vue中每个组件都是独立的，从组件的创造，数据初始化，挂载，更新，销毁。

vue中ref($refs)的用法：

v-if和v-show的区别：
    1.共同点
    都是动态显示DOM元素
    2.区别
    （1）手段：
        v-if是动态的向DOM树内添加或者删除DOM元素；
        v-show是通过设置DOM元素的display样式属性控制显隐；
    （2）编译过程：
        v-if切换有一个局部编译/卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件；
        v-show只是简单的基于css切换；
    （3）编译条件：
        v-if是惰性的，如果初始条件为假，则什么也不做；只有在条件第一次变为真时才开始局部编译（编译被缓存？编译被缓存后，然后再切换的时候进行局部卸载);
        v-show是在任何条件下（首次条件是否为真）都被编译，然后被缓存，而且DOM元素保留；
    （4）性能消耗：
        v-if有更高的切换消耗；
        v-show有更高的初始渲染消耗；
    （5）使用场景：
        v-if适合运营条件不大可能改变；
        v-show适合频繁切换。


深拷贝 
浅拷贝 
如何实现一个深拷贝 
手写代码 
原型构造函数 
闭包解决了一个什么问题 
闭包带来了什么问题 
跨域问题 
p元素和div元素的区别 
css盒子 
水平居中元素 
清楚浮动的方式 
清楚浮动不同方式有什么区别 
重绘于回流的区别 
实现响应式布局有哪些
css框架 
严格模式 
浏览器输入 
url 到页面展示发生了什么 
web前端优化策略 
css选择器 
项目中遇到那些坑 
package.json做什么的 
手写peomise 
promise.all
